
name: Tests

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: read

jobs:
  pip:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11"]
        qt-api: ["PyQt", "PyQt6", "Pyside2", "Pyside6"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-gui-${{ matrix.qt-api }}.txt
        pip install -r requirements.txt
    - name: Setup Julia bridge to Korg
      run: |
        python setup_korg.py
    - name: Install pytest
      run: |
        pip install pytest
    - name: Test with pytest
      run: |
        pytest

  conda:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup conda environment with mambaforge
      uses: conda-incubator/setup-miniconda@v2
      with:
        use-mamba: true
        activate-environment: Grok
        condarc-file: ${{ matrix.condarc-file }}
        python-version: ${{ matrix.python-version }}
        environment-file: environment.yml

    - name: Activate environment
      run: |
        conda activate Grok
    - name: Install pytest
      run: |
        conda install pytest
    - name: Test with pytest
      run: |
        pytest

#- name: Lint with flake8
#   run: |
#     # stop the build if there are Python syntax errors or undefined names
#     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

